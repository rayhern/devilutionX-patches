diff --git a/Source/multi.cpp b/Source/multi.cpp
index f8200289..7567f97a 100644
--- a/Source/multi.cpp
+++ b/Source/multi.cpp
@@ -756,11 +756,11 @@ int InitLevelType(int l)
 {
 	if (l == 0)
 		return 0;
-	if (l >= 1 && l <= 4)
+	if (l >= 1 && l <= 8)
 		return 1;
-	if (l >= 5 && l <= 8)
+	if (l >= 9 && l <= 16)
 		return 2;
-	if (l >= 9 && l <= 12)
+	if (l >= 17 && l <= 24)
 		return 3;
 
 	return 4;
diff --git a/Source/player.cpp b/Source/player.cpp
index 93989dcf..d77a66e2 100644
--- a/Source/player.cpp
+++ b/Source/player.cpp
@@ -78,9 +78,9 @@ char *ClassStrTblOld[] = {
 };
 /** Maps from player_class to maximum stats. */
 int MaxStats[3][4] = {
-	{ 250, 50, 60, 100 },
-	{ 55, 70, 250, 80 },
-	{ 45, 250, 85, 80 }
+	{ 500, 100, 120, 200 },
+	{ 110, 140, 500, 160 },
+	{ 90, 500, 170, 80 }
 };
 /** Specifies the experience point limit of each level. */
 int ExpLvlsTbl[MAXCHARLEVEL] = {
@@ -134,7 +134,8 @@ int ExpLvlsTbl[MAXCHARLEVEL] = {
 	892680222,
 	1082908612,
 	1310707109,
-	1583495809
+	1583495809,
+	2000000000,
 };
 char *ClassStrTbl[] = {
 	"Warrior",
@@ -736,7 +737,11 @@ void NextPlrLevel(int pnum)
 		plr[pnum]._pStatPts += 5;
 	}
 
-	plr[pnum]._pNextExper = ExpLvlsTbl[plr[pnum]._pLevel];
+	if (plr[pnum]._pLevel >= 50) {
+		plr[pnum]._pNextExper += (plr[pnum]._pNextExper * 2) / 4;
+	} else {
+		plr[pnum]._pNextExper = ExpLvlsTbl[plr[pnum]._pLevel];
+	}
 
 	hp = plr[pnum]._pClass == PC_SORCERER ? 64 : 128;
 	if (gbMaxPlayers == 1) {
@@ -819,15 +824,25 @@ void AddPlrExperience(int pnum, int lvl, int exp)
 		plr[pnum]._pExperience = MAXEXP;
 	}
 
-	if (plr[pnum]._pExperience >= ExpLvlsTbl[49]) {
-		plr[pnum]._pLevel = 50;
+	// if (plr[pnum]._pExperience >= ExpLvlsTbl[49]) {
+	// 	plr[pnum]._pLevel = 50;
+	// 	return;
+	// }
+	if (plr[pnum]._pLevel >= 99) {
+		plr[pnum]._pLevel = 99;
 		return;
 	}
 
 	// Increase player level if applicable
 	newLvl = 0;
-	while (plr[pnum]._pExperience >= ExpLvlsTbl[newLvl]) {
-		newLvl++;
+	if (plr[pnum]._pLevel >= 50) {
+		while (plr[pnum]._pExperience >= (2000000000 * newLvl) / 4) {
+			newLvl++;
+		}
+	} else {
+		while (plr[pnum]._pExperience >= ExpLvlsTbl[newLvl]) {
+			newLvl++;
+		}
 	}
 	if (newLvl != plr[pnum]._pLevel) {
 		for (i = newLvl - plr[pnum]._pLevel; i > 0; i--) {
diff --git a/SourceX/DiabloUI/selgame.cpp b/SourceX/DiabloUI/selgame.cpp
index e786503d..895efff6 100644
--- a/SourceX/DiabloUI/selgame.cpp
+++ b/SourceX/DiabloUI/selgame.cpp
@@ -70,6 +70,7 @@ void selgame_GameSelection_Init()
 	}
 
 	getIniValue("Phone Book", "Entry1", selgame_Ip, 128);
+	getIniValue("Phone Book", "Password1", selgame_Password, 15);
 
 	selgame_FreeVectors();
 
@@ -350,7 +351,7 @@ void selgame_Speed_Select(int value)
 
 void selgame_Password_Init(int value)
 {
-	memset(&selgame_Password, 0, sizeof(selgame_Password));
+	// memset(&selgame_Password, 0, sizeof(selgame_Password));
 
 	selgame_FreeVectors();
 
@@ -385,6 +386,7 @@ void selgame_Password_Select(int value)
 {
 	if (selgame_selectedGame) {
 		setIniValue("Phone Book", "Entry1", selgame_Ip);
+		setIniValue("Phone Book", "Password1", selgame_Password);
 		if (SNetJoinGame(selgame_selectedGame, selgame_Ip, selgame_Password, NULL, NULL, gdwPlayerId)) {
 			if (!IsDifficultyAllowed(m_client_info->initdata->bDiff)) {
 				selgame_GameSelection_Select(1);
diff --git a/build/.gitkeep b/build/.gitkeep
deleted file mode 100644
index e69de29b..00000000
diff --git a/defs.h b/defs.h
index 059de08e..44b8e6d1 100644
--- a/defs.h
+++ b/defs.h
@@ -17,7 +17,7 @@
 #define GMENU_ENABLED			0x80000000
 
 // must be unsigned to generate unsigned comparisons with pnum
-#define MAX_PLRS				4
+#define MAX_PLRS				8
 
 #define MAX_CHARACTERS			10
 #define MAX_LVLMTYPES			16
@@ -32,9 +32,9 @@
 #define MAXBELTITEMS			8
 #define MAXLIGHTS				32
 #define MAXMISSILES				125
-#define MAXMONSTERS				200
+#define MAXMONSTERS				400
 #define MAXMULTIQUESTS			4
-#define MAXOBJECTS				127
+#define MAXOBJECTS				254
 #define MAXPORTAL				4
 #define MAXQUESTS				16
 #define MAXTHEMES				50
@@ -43,7 +43,7 @@
 #define MAXVISION				32
 #define MDMAXX					40
 #define MDMAXY					40
-#define MAXCHARLEVEL			51
+#define MAXCHARLEVEL			100
 #define ITEMTYPES				35
 
 // number of inventory grid cells
@@ -59,19 +59,19 @@
 #define NUM_TOWNERS				16
 
 // todo: enums
-#define NUMLEVELS				17
+#define NUMLEVELS				34
 #define SMITH_ITEMS				20
 #define SMITH_PREMIUM_ITEMS		6
 #define SMITH_MAX_VALUE			140000
 #define SMITH_MAX_PREMIUM_VALUE 140000
 
 // from diablo 2 beta
-#define MAXEXP					2000000000
+#define MAXEXP					10000000000000
 #define MAXRESIST				75
 
-#define GOLD_SMALL_LIMIT		1000
-#define GOLD_MEDIUM_LIMIT		2500
-#define GOLD_MAX_LIMIT			5000
+#define GOLD_SMALL_LIMIT		5000
+#define GOLD_MEDIUM_LIMIT		10000
+#define GOLD_MAX_LIMIT			20000
 
 #define PLR_NAME_LEN			32
 
